// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: salto/nebula/calendar/v1/calendar.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Saltoapis.Nebula.Calendar.V1 {
  /// <summary>
  /// The calendar functionality defines your organization's working calendar.
  /// For example, you can define public holidays, company holidays and company
  /// shutdowns. This service is responsible for managing calendar resources.
  /// </summary>
  public static partial class CalendarService
  {
    static readonly string __ServiceName = "salto.nebula.calendar.v1.CalendarService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Calendar.V1.CreateCalendarRequest> __Marshaller_salto_nebula_calendar_v1_CreateCalendarRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Calendar.V1.CreateCalendarRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Calendar.V1.Calendar> __Marshaller_salto_nebula_calendar_v1_Calendar = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Calendar.V1.Calendar.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Calendar.V1.GetCalendarRequest> __Marshaller_salto_nebula_calendar_v1_GetCalendarRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Calendar.V1.GetCalendarRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Calendar.V1.ListCalendarsRequest> __Marshaller_salto_nebula_calendar_v1_ListCalendarsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Calendar.V1.ListCalendarsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Calendar.V1.ListCalendarsResponse> __Marshaller_salto_nebula_calendar_v1_ListCalendarsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Calendar.V1.ListCalendarsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Calendar.V1.UpdateCalendarRequest> __Marshaller_salto_nebula_calendar_v1_UpdateCalendarRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Calendar.V1.UpdateCalendarRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Calendar.V1.DeleteCalendarRequest> __Marshaller_salto_nebula_calendar_v1_DeleteCalendarRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Calendar.V1.DeleteCalendarRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Calendar.V1.CreateEventRequest> __Marshaller_salto_nebula_calendar_v1_CreateEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Calendar.V1.CreateEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Calendar.V1.Event> __Marshaller_salto_nebula_calendar_v1_Event = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Calendar.V1.Event.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Calendar.V1.GetEventRequest> __Marshaller_salto_nebula_calendar_v1_GetEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Calendar.V1.GetEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Calendar.V1.ListEventsRequest> __Marshaller_salto_nebula_calendar_v1_ListEventsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Calendar.V1.ListEventsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Calendar.V1.ListEventsResponse> __Marshaller_salto_nebula_calendar_v1_ListEventsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Calendar.V1.ListEventsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Calendar.V1.UpdateEventRequest> __Marshaller_salto_nebula_calendar_v1_UpdateEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Calendar.V1.UpdateEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Calendar.V1.DeleteEventRequest> __Marshaller_salto_nebula_calendar_v1_DeleteEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Calendar.V1.DeleteEventRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Calendar.V1.CreateCalendarRequest, global::Saltoapis.Nebula.Calendar.V1.Calendar> __Method_CreateCalendar = new grpc::Method<global::Saltoapis.Nebula.Calendar.V1.CreateCalendarRequest, global::Saltoapis.Nebula.Calendar.V1.Calendar>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCalendar",
        __Marshaller_salto_nebula_calendar_v1_CreateCalendarRequest,
        __Marshaller_salto_nebula_calendar_v1_Calendar);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Calendar.V1.GetCalendarRequest, global::Saltoapis.Nebula.Calendar.V1.Calendar> __Method_GetCalendar = new grpc::Method<global::Saltoapis.Nebula.Calendar.V1.GetCalendarRequest, global::Saltoapis.Nebula.Calendar.V1.Calendar>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCalendar",
        __Marshaller_salto_nebula_calendar_v1_GetCalendarRequest,
        __Marshaller_salto_nebula_calendar_v1_Calendar);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Calendar.V1.ListCalendarsRequest, global::Saltoapis.Nebula.Calendar.V1.ListCalendarsResponse> __Method_ListCalendars = new grpc::Method<global::Saltoapis.Nebula.Calendar.V1.ListCalendarsRequest, global::Saltoapis.Nebula.Calendar.V1.ListCalendarsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCalendars",
        __Marshaller_salto_nebula_calendar_v1_ListCalendarsRequest,
        __Marshaller_salto_nebula_calendar_v1_ListCalendarsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Calendar.V1.UpdateCalendarRequest, global::Saltoapis.Nebula.Calendar.V1.Calendar> __Method_UpdateCalendar = new grpc::Method<global::Saltoapis.Nebula.Calendar.V1.UpdateCalendarRequest, global::Saltoapis.Nebula.Calendar.V1.Calendar>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCalendar",
        __Marshaller_salto_nebula_calendar_v1_UpdateCalendarRequest,
        __Marshaller_salto_nebula_calendar_v1_Calendar);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Calendar.V1.DeleteCalendarRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteCalendar = new grpc::Method<global::Saltoapis.Nebula.Calendar.V1.DeleteCalendarRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCalendar",
        __Marshaller_salto_nebula_calendar_v1_DeleteCalendarRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Calendar.V1.CreateEventRequest, global::Saltoapis.Nebula.Calendar.V1.Event> __Method_CreateEvent = new grpc::Method<global::Saltoapis.Nebula.Calendar.V1.CreateEventRequest, global::Saltoapis.Nebula.Calendar.V1.Event>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateEvent",
        __Marshaller_salto_nebula_calendar_v1_CreateEventRequest,
        __Marshaller_salto_nebula_calendar_v1_Event);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Calendar.V1.GetEventRequest, global::Saltoapis.Nebula.Calendar.V1.Event> __Method_GetEvent = new grpc::Method<global::Saltoapis.Nebula.Calendar.V1.GetEventRequest, global::Saltoapis.Nebula.Calendar.V1.Event>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEvent",
        __Marshaller_salto_nebula_calendar_v1_GetEventRequest,
        __Marshaller_salto_nebula_calendar_v1_Event);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Calendar.V1.ListEventsRequest, global::Saltoapis.Nebula.Calendar.V1.ListEventsResponse> __Method_ListEvents = new grpc::Method<global::Saltoapis.Nebula.Calendar.V1.ListEventsRequest, global::Saltoapis.Nebula.Calendar.V1.ListEventsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListEvents",
        __Marshaller_salto_nebula_calendar_v1_ListEventsRequest,
        __Marshaller_salto_nebula_calendar_v1_ListEventsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Calendar.V1.UpdateEventRequest, global::Saltoapis.Nebula.Calendar.V1.Event> __Method_UpdateEvent = new grpc::Method<global::Saltoapis.Nebula.Calendar.V1.UpdateEventRequest, global::Saltoapis.Nebula.Calendar.V1.Event>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEvent",
        __Marshaller_salto_nebula_calendar_v1_UpdateEventRequest,
        __Marshaller_salto_nebula_calendar_v1_Event);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Calendar.V1.DeleteEventRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteEvent = new grpc::Method<global::Saltoapis.Nebula.Calendar.V1.DeleteEventRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteEvent",
        __Marshaller_salto_nebula_calendar_v1_DeleteEventRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Saltoapis.Nebula.Calendar.V1.CalendarReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for CalendarService</summary>
    public partial class CalendarServiceClient : grpc::ClientBase<CalendarServiceClient>
    {
      /// <summary>Creates a new client for CalendarService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CalendarServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CalendarService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CalendarServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CalendarServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CalendarServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Create a calendar
      ///
      /// Creates a calendar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Calendar.V1.Calendar CreateCalendar(global::Saltoapis.Nebula.Calendar.V1.CreateCalendarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCalendar(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a calendar
      ///
      /// Creates a calendar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Calendar.V1.Calendar CreateCalendar(global::Saltoapis.Nebula.Calendar.V1.CreateCalendarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCalendar, null, options, request);
      }
      /// <summary>
      /// Create a calendar
      ///
      /// Creates a calendar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Calendar.V1.Calendar> CreateCalendarAsync(global::Saltoapis.Nebula.Calendar.V1.CreateCalendarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCalendarAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a calendar
      ///
      /// Creates a calendar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Calendar.V1.Calendar> CreateCalendarAsync(global::Saltoapis.Nebula.Calendar.V1.CreateCalendarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCalendar, null, options, request);
      }
      /// <summary>
      /// Get a calendar
      ///
      /// Gets an existing calendar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Calendar.V1.Calendar GetCalendar(global::Saltoapis.Nebula.Calendar.V1.GetCalendarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCalendar(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a calendar
      ///
      /// Gets an existing calendar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Calendar.V1.Calendar GetCalendar(global::Saltoapis.Nebula.Calendar.V1.GetCalendarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCalendar, null, options, request);
      }
      /// <summary>
      /// Get a calendar
      ///
      /// Gets an existing calendar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Calendar.V1.Calendar> GetCalendarAsync(global::Saltoapis.Nebula.Calendar.V1.GetCalendarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCalendarAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a calendar
      ///
      /// Gets an existing calendar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Calendar.V1.Calendar> GetCalendarAsync(global::Saltoapis.Nebula.Calendar.V1.GetCalendarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCalendar, null, options, request);
      }
      /// <summary>
      /// List calendars
      ///
      /// Returns a list of calendars that have been previously created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Calendar.V1.ListCalendarsResponse ListCalendars(global::Saltoapis.Nebula.Calendar.V1.ListCalendarsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCalendars(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List calendars
      ///
      /// Returns a list of calendars that have been previously created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Calendar.V1.ListCalendarsResponse ListCalendars(global::Saltoapis.Nebula.Calendar.V1.ListCalendarsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCalendars, null, options, request);
      }
      /// <summary>
      /// List calendars
      ///
      /// Returns a list of calendars that have been previously created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Calendar.V1.ListCalendarsResponse> ListCalendarsAsync(global::Saltoapis.Nebula.Calendar.V1.ListCalendarsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCalendarsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List calendars
      ///
      /// Returns a list of calendars that have been previously created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Calendar.V1.ListCalendarsResponse> ListCalendarsAsync(global::Saltoapis.Nebula.Calendar.V1.ListCalendarsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCalendars, null, options, request);
      }
      /// <summary>
      /// Update a calendar
      ///
      /// Updates an existing calendar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Calendar.V1.Calendar UpdateCalendar(global::Saltoapis.Nebula.Calendar.V1.UpdateCalendarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCalendar(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a calendar
      ///
      /// Updates an existing calendar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Calendar.V1.Calendar UpdateCalendar(global::Saltoapis.Nebula.Calendar.V1.UpdateCalendarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCalendar, null, options, request);
      }
      /// <summary>
      /// Update a calendar
      ///
      /// Updates an existing calendar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Calendar.V1.Calendar> UpdateCalendarAsync(global::Saltoapis.Nebula.Calendar.V1.UpdateCalendarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCalendarAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a calendar
      ///
      /// Updates an existing calendar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Calendar.V1.Calendar> UpdateCalendarAsync(global::Saltoapis.Nebula.Calendar.V1.UpdateCalendarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCalendar, null, options, request);
      }
      /// <summary>
      /// Delete a calendar
      ///
      /// Permanently deletes a calendar. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCalendar(global::Saltoapis.Nebula.Calendar.V1.DeleteCalendarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCalendar(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a calendar
      ///
      /// Permanently deletes a calendar. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCalendar(global::Saltoapis.Nebula.Calendar.V1.DeleteCalendarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCalendar, null, options, request);
      }
      /// <summary>
      /// Delete a calendar
      ///
      /// Permanently deletes a calendar. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCalendarAsync(global::Saltoapis.Nebula.Calendar.V1.DeleteCalendarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCalendarAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a calendar
      ///
      /// Permanently deletes a calendar. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCalendarAsync(global::Saltoapis.Nebula.Calendar.V1.DeleteCalendarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCalendar, null, options, request);
      }
      /// <summary>
      /// Create a calendar event
      ///
      /// Creates a calendar event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Calendar.V1.Event CreateEvent(global::Saltoapis.Nebula.Calendar.V1.CreateEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a calendar event
      ///
      /// Creates a calendar event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Calendar.V1.Event CreateEvent(global::Saltoapis.Nebula.Calendar.V1.CreateEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateEvent, null, options, request);
      }
      /// <summary>
      /// Create a calendar event
      ///
      /// Creates a calendar event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Calendar.V1.Event> CreateEventAsync(global::Saltoapis.Nebula.Calendar.V1.CreateEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a calendar event
      ///
      /// Creates a calendar event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Calendar.V1.Event> CreateEventAsync(global::Saltoapis.Nebula.Calendar.V1.CreateEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateEvent, null, options, request);
      }
      /// <summary>
      /// Get a calendar event
      ///
      /// Gets an existing calendar event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Calendar.V1.Event GetEvent(global::Saltoapis.Nebula.Calendar.V1.GetEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a calendar event
      ///
      /// Gets an existing calendar event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Calendar.V1.Event GetEvent(global::Saltoapis.Nebula.Calendar.V1.GetEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEvent, null, options, request);
      }
      /// <summary>
      /// Get a calendar event
      ///
      /// Gets an existing calendar event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Calendar.V1.Event> GetEventAsync(global::Saltoapis.Nebula.Calendar.V1.GetEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a calendar event
      ///
      /// Gets an existing calendar event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Calendar.V1.Event> GetEventAsync(global::Saltoapis.Nebula.Calendar.V1.GetEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEvent, null, options, request);
      }
      /// <summary>
      /// List calendar events
      ///
      /// Lists existing calendar events.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Calendar.V1.ListEventsResponse ListEvents(global::Saltoapis.Nebula.Calendar.V1.ListEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEvents(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List calendar events
      ///
      /// Lists existing calendar events.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Calendar.V1.ListEventsResponse ListEvents(global::Saltoapis.Nebula.Calendar.V1.ListEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListEvents, null, options, request);
      }
      /// <summary>
      /// List calendar events
      ///
      /// Lists existing calendar events.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Calendar.V1.ListEventsResponse> ListEventsAsync(global::Saltoapis.Nebula.Calendar.V1.ListEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEventsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List calendar events
      ///
      /// Lists existing calendar events.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Calendar.V1.ListEventsResponse> ListEventsAsync(global::Saltoapis.Nebula.Calendar.V1.ListEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListEvents, null, options, request);
      }
      /// <summary>
      /// Update a calendar event
      ///
      /// Updates an existing calendar event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Calendar.V1.Event UpdateEvent(global::Saltoapis.Nebula.Calendar.V1.UpdateEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a calendar event
      ///
      /// Updates an existing calendar event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Calendar.V1.Event UpdateEvent(global::Saltoapis.Nebula.Calendar.V1.UpdateEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateEvent, null, options, request);
      }
      /// <summary>
      /// Update a calendar event
      ///
      /// Updates an existing calendar event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Calendar.V1.Event> UpdateEventAsync(global::Saltoapis.Nebula.Calendar.V1.UpdateEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a calendar event
      ///
      /// Updates an existing calendar event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Calendar.V1.Event> UpdateEventAsync(global::Saltoapis.Nebula.Calendar.V1.UpdateEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateEvent, null, options, request);
      }
      /// <summary>
      /// Delete a calendar event
      ///
      /// Permanently deletes a calendar event. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteEvent(global::Saltoapis.Nebula.Calendar.V1.DeleteEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a calendar event
      ///
      /// Permanently deletes a calendar event. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteEvent(global::Saltoapis.Nebula.Calendar.V1.DeleteEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteEvent, null, options, request);
      }
      /// <summary>
      /// Delete a calendar event
      ///
      /// Permanently deletes a calendar event. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEventAsync(global::Saltoapis.Nebula.Calendar.V1.DeleteEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a calendar event
      ///
      /// Permanently deletes a calendar event. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEventAsync(global::Saltoapis.Nebula.Calendar.V1.DeleteEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteEvent, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CalendarServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CalendarServiceClient(configuration);
      }
    }

  }
}
#endregion
