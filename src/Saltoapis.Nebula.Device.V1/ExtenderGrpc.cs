// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: salto/nebula/device/v1/extender.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Saltoapis.Nebula.Device.V1 {
  /// <summary>
  /// An extender allows the distance between the a gateway and an electronic lock
  /// to be extended. It forwards signals between an access point (lock) and a
  /// gateway. This service is responsible for managing extender resources.
  /// </summary>
  public static partial class ExtenderService
  {
    static readonly string __ServiceName = "salto.nebula.device.v1.ExtenderService";

    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Device.V1.CreateExtenderRequest> __Marshaller_salto_nebula_device_v1_CreateExtenderRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Saltoapis.Nebula.Device.V1.CreateExtenderRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Device.V1.Extender> __Marshaller_salto_nebula_device_v1_Extender = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Saltoapis.Nebula.Device.V1.Extender.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Device.V1.DeleteExtenderRequest> __Marshaller_salto_nebula_device_v1_DeleteExtenderRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Saltoapis.Nebula.Device.V1.DeleteExtenderRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Device.V1.GetExtenderRequest> __Marshaller_salto_nebula_device_v1_GetExtenderRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Saltoapis.Nebula.Device.V1.GetExtenderRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Device.V1.ListExtendersRequest> __Marshaller_salto_nebula_device_v1_ListExtendersRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Saltoapis.Nebula.Device.V1.ListExtendersRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Device.V1.ListExtendersResponse> __Marshaller_salto_nebula_device_v1_ListExtendersResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Saltoapis.Nebula.Device.V1.ListExtendersResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Device.V1.UpdateExtenderRequest> __Marshaller_salto_nebula_device_v1_UpdateExtenderRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Saltoapis.Nebula.Device.V1.UpdateExtenderRequest.Parser.ParseFrom);

    static readonly grpc::Method<global::Saltoapis.Nebula.Device.V1.CreateExtenderRequest, global::Saltoapis.Nebula.Device.V1.Extender> __Method_CreateExtender = new grpc::Method<global::Saltoapis.Nebula.Device.V1.CreateExtenderRequest, global::Saltoapis.Nebula.Device.V1.Extender>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateExtender",
        __Marshaller_salto_nebula_device_v1_CreateExtenderRequest,
        __Marshaller_salto_nebula_device_v1_Extender);

    static readonly grpc::Method<global::Saltoapis.Nebula.Device.V1.DeleteExtenderRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteExtender = new grpc::Method<global::Saltoapis.Nebula.Device.V1.DeleteExtenderRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteExtender",
        __Marshaller_salto_nebula_device_v1_DeleteExtenderRequest,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Saltoapis.Nebula.Device.V1.GetExtenderRequest, global::Saltoapis.Nebula.Device.V1.Extender> __Method_GetExtender = new grpc::Method<global::Saltoapis.Nebula.Device.V1.GetExtenderRequest, global::Saltoapis.Nebula.Device.V1.Extender>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetExtender",
        __Marshaller_salto_nebula_device_v1_GetExtenderRequest,
        __Marshaller_salto_nebula_device_v1_Extender);

    static readonly grpc::Method<global::Saltoapis.Nebula.Device.V1.ListExtendersRequest, global::Saltoapis.Nebula.Device.V1.ListExtendersResponse> __Method_ListExtenders = new grpc::Method<global::Saltoapis.Nebula.Device.V1.ListExtendersRequest, global::Saltoapis.Nebula.Device.V1.ListExtendersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListExtenders",
        __Marshaller_salto_nebula_device_v1_ListExtendersRequest,
        __Marshaller_salto_nebula_device_v1_ListExtendersResponse);

    static readonly grpc::Method<global::Saltoapis.Nebula.Device.V1.UpdateExtenderRequest, global::Saltoapis.Nebula.Device.V1.Extender> __Method_UpdateExtender = new grpc::Method<global::Saltoapis.Nebula.Device.V1.UpdateExtenderRequest, global::Saltoapis.Nebula.Device.V1.Extender>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateExtender",
        __Marshaller_salto_nebula_device_v1_UpdateExtenderRequest,
        __Marshaller_salto_nebula_device_v1_Extender);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Saltoapis.Nebula.Device.V1.ExtenderReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for ExtenderService</summary>
    public partial class ExtenderServiceClient : grpc::ClientBase<ExtenderServiceClient>
    {
      /// <summary>Creates a new client for ExtenderService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ExtenderServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ExtenderService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ExtenderServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ExtenderServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ExtenderServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Create an extender
      ///
      /// Creates a new extender
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Saltoapis.Nebula.Device.V1.Extender CreateExtender(global::Saltoapis.Nebula.Device.V1.CreateExtenderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateExtender(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an extender
      ///
      /// Creates a new extender
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Saltoapis.Nebula.Device.V1.Extender CreateExtender(global::Saltoapis.Nebula.Device.V1.CreateExtenderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateExtender, null, options, request);
      }
      /// <summary>
      /// Create an extender
      ///
      /// Creates a new extender
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Device.V1.Extender> CreateExtenderAsync(global::Saltoapis.Nebula.Device.V1.CreateExtenderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateExtenderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an extender
      ///
      /// Creates a new extender
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Device.V1.Extender> CreateExtenderAsync(global::Saltoapis.Nebula.Device.V1.CreateExtenderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateExtender, null, options, request);
      }
      /// <summary>
      /// Delete an extender
      ///
      /// Permanently deletes an extender. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteExtender(global::Saltoapis.Nebula.Device.V1.DeleteExtenderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteExtender(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an extender
      ///
      /// Permanently deletes an extender. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteExtender(global::Saltoapis.Nebula.Device.V1.DeleteExtenderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteExtender, null, options, request);
      }
      /// <summary>
      /// Delete an extender
      ///
      /// Permanently deletes an extender. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteExtenderAsync(global::Saltoapis.Nebula.Device.V1.DeleteExtenderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteExtenderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an extender
      ///
      /// Permanently deletes an extender. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteExtenderAsync(global::Saltoapis.Nebula.Device.V1.DeleteExtenderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteExtender, null, options, request);
      }
      /// <summary>
      /// Get an extender
      ///
      /// Gets an existing extender.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Saltoapis.Nebula.Device.V1.Extender GetExtender(global::Saltoapis.Nebula.Device.V1.GetExtenderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExtender(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get an extender
      ///
      /// Gets an existing extender.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Saltoapis.Nebula.Device.V1.Extender GetExtender(global::Saltoapis.Nebula.Device.V1.GetExtenderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetExtender, null, options, request);
      }
      /// <summary>
      /// Get an extender
      ///
      /// Gets an existing extender.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Device.V1.Extender> GetExtenderAsync(global::Saltoapis.Nebula.Device.V1.GetExtenderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExtenderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get an extender
      ///
      /// Gets an existing extender.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Device.V1.Extender> GetExtenderAsync(global::Saltoapis.Nebula.Device.V1.GetExtenderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetExtender, null, options, request);
      }
      /// <summary>
      /// List extenders
      ///
      /// Returns a list of extenders that have been previously created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Saltoapis.Nebula.Device.V1.ListExtendersResponse ListExtenders(global::Saltoapis.Nebula.Device.V1.ListExtendersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListExtenders(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List extenders
      ///
      /// Returns a list of extenders that have been previously created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Saltoapis.Nebula.Device.V1.ListExtendersResponse ListExtenders(global::Saltoapis.Nebula.Device.V1.ListExtendersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListExtenders, null, options, request);
      }
      /// <summary>
      /// List extenders
      ///
      /// Returns a list of extenders that have been previously created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Device.V1.ListExtendersResponse> ListExtendersAsync(global::Saltoapis.Nebula.Device.V1.ListExtendersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListExtendersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List extenders
      ///
      /// Returns a list of extenders that have been previously created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Device.V1.ListExtendersResponse> ListExtendersAsync(global::Saltoapis.Nebula.Device.V1.ListExtendersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListExtenders, null, options, request);
      }
      /// <summary>
      /// Update an extender
      ///
      /// Updates an existing extender.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Saltoapis.Nebula.Device.V1.Extender UpdateExtender(global::Saltoapis.Nebula.Device.V1.UpdateExtenderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateExtender(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an extender
      ///
      /// Updates an existing extender.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Saltoapis.Nebula.Device.V1.Extender UpdateExtender(global::Saltoapis.Nebula.Device.V1.UpdateExtenderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateExtender, null, options, request);
      }
      /// <summary>
      /// Update an extender
      ///
      /// Updates an existing extender.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Device.V1.Extender> UpdateExtenderAsync(global::Saltoapis.Nebula.Device.V1.UpdateExtenderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateExtenderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an extender
      ///
      /// Updates an existing extender.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Device.V1.Extender> UpdateExtenderAsync(global::Saltoapis.Nebula.Device.V1.UpdateExtenderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateExtender, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ExtenderServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ExtenderServiceClient(configuration);
      }
    }

  }
}
#endregion
