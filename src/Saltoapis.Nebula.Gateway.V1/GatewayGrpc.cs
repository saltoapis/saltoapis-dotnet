// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: salto/nebula/gateway/v1/gateway.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Saltoapis.Nebula.Gateway.V1 {
  /// <summary>
  /// Gateways are hardware devices intended to be used with access points where
  /// online connectivity is needed. This service is responsible for managing
  /// gateway resources.
  /// </summary>
  public static partial class GatewayService
  {
    static readonly string __ServiceName = "salto.nebula.gateway.v1.GatewayService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Gateway.V1.CreateGatewayRequest> __Marshaller_salto_nebula_gateway_v1_CreateGatewayRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Gateway.V1.CreateGatewayRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Gateway.V1.Gateway> __Marshaller_salto_nebula_gateway_v1_Gateway = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Gateway.V1.Gateway.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Gateway.V1.GetGatewayRequest> __Marshaller_salto_nebula_gateway_v1_GetGatewayRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Gateway.V1.GetGatewayRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Gateway.V1.ListGatewaysRequest> __Marshaller_salto_nebula_gateway_v1_ListGatewaysRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Gateway.V1.ListGatewaysRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Gateway.V1.ListGatewaysResponse> __Marshaller_salto_nebula_gateway_v1_ListGatewaysResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Gateway.V1.ListGatewaysResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Gateway.V1.UpdateGatewayRequest> __Marshaller_salto_nebula_gateway_v1_UpdateGatewayRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Gateway.V1.UpdateGatewayRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Gateway.V1.DeleteGatewayRequest> __Marshaller_salto_nebula_gateway_v1_DeleteGatewayRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Gateway.V1.DeleteGatewayRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Gateway.V1.BindGatewayRequest> __Marshaller_salto_nebula_gateway_v1_BindGatewayRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Gateway.V1.BindGatewayRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Gateway.V1.BindGatewayResponse> __Marshaller_salto_nebula_gateway_v1_BindGatewayResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Gateway.V1.BindGatewayResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Gateway.V1.UnbindGatewayRequest> __Marshaller_salto_nebula_gateway_v1_UnbindGatewayRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Gateway.V1.UnbindGatewayRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Gateway.V1.UnbindGatewayResponse> __Marshaller_salto_nebula_gateway_v1_UnbindGatewayResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Gateway.V1.UnbindGatewayResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Gateway.V1.InitializeGatewayRequest> __Marshaller_salto_nebula_gateway_v1_InitializeGatewayRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Gateway.V1.InitializeGatewayRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Longrunning.V1.Operation> __Marshaller_salto_longrunning_v1_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Longrunning.V1.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Gateway.V1.ConfigureGatewayRequest> __Marshaller_salto_nebula_gateway_v1_ConfigureGatewayRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Gateway.V1.ConfigureGatewayRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Gateway.V1.ResetGatewayRequest> __Marshaller_salto_nebula_gateway_v1_ResetGatewayRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Gateway.V1.ResetGatewayRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Gateway.V1.UpdateGatewayFirmwareRequest> __Marshaller_salto_nebula_gateway_v1_UpdateGatewayFirmwareRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Gateway.V1.UpdateGatewayFirmwareRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Gateway.V1.GenerateAuthorizationTokenRequest> __Marshaller_salto_nebula_gateway_v1_GenerateAuthorizationTokenRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Gateway.V1.GenerateAuthorizationTokenRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Gateway.V1.GenerateAuthorizationTokenResponse> __Marshaller_salto_nebula_gateway_v1_GenerateAuthorizationTokenResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Gateway.V1.GenerateAuthorizationTokenResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Gateway.V1.GenerateFirmwareDownloadUriRequest> __Marshaller_salto_nebula_gateway_v1_GenerateFirmwareDownloadUriRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Gateway.V1.GenerateFirmwareDownloadUriRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Gateway.V1.CreateGatewayRequest, global::Saltoapis.Nebula.Gateway.V1.Gateway> __Method_CreateGateway = new grpc::Method<global::Saltoapis.Nebula.Gateway.V1.CreateGatewayRequest, global::Saltoapis.Nebula.Gateway.V1.Gateway>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateGateway",
        __Marshaller_salto_nebula_gateway_v1_CreateGatewayRequest,
        __Marshaller_salto_nebula_gateway_v1_Gateway);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Gateway.V1.GetGatewayRequest, global::Saltoapis.Nebula.Gateway.V1.Gateway> __Method_GetGateway = new grpc::Method<global::Saltoapis.Nebula.Gateway.V1.GetGatewayRequest, global::Saltoapis.Nebula.Gateway.V1.Gateway>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGateway",
        __Marshaller_salto_nebula_gateway_v1_GetGatewayRequest,
        __Marshaller_salto_nebula_gateway_v1_Gateway);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Gateway.V1.ListGatewaysRequest, global::Saltoapis.Nebula.Gateway.V1.ListGatewaysResponse> __Method_ListGateways = new grpc::Method<global::Saltoapis.Nebula.Gateway.V1.ListGatewaysRequest, global::Saltoapis.Nebula.Gateway.V1.ListGatewaysResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListGateways",
        __Marshaller_salto_nebula_gateway_v1_ListGatewaysRequest,
        __Marshaller_salto_nebula_gateway_v1_ListGatewaysResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Gateway.V1.UpdateGatewayRequest, global::Saltoapis.Nebula.Gateway.V1.Gateway> __Method_UpdateGateway = new grpc::Method<global::Saltoapis.Nebula.Gateway.V1.UpdateGatewayRequest, global::Saltoapis.Nebula.Gateway.V1.Gateway>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateGateway",
        __Marshaller_salto_nebula_gateway_v1_UpdateGatewayRequest,
        __Marshaller_salto_nebula_gateway_v1_Gateway);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Gateway.V1.DeleteGatewayRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteGateway = new grpc::Method<global::Saltoapis.Nebula.Gateway.V1.DeleteGatewayRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteGateway",
        __Marshaller_salto_nebula_gateway_v1_DeleteGatewayRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Gateway.V1.BindGatewayRequest, global::Saltoapis.Nebula.Gateway.V1.BindGatewayResponse> __Method_BindGateway = new grpc::Method<global::Saltoapis.Nebula.Gateway.V1.BindGatewayRequest, global::Saltoapis.Nebula.Gateway.V1.BindGatewayResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BindGateway",
        __Marshaller_salto_nebula_gateway_v1_BindGatewayRequest,
        __Marshaller_salto_nebula_gateway_v1_BindGatewayResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Gateway.V1.UnbindGatewayRequest, global::Saltoapis.Nebula.Gateway.V1.UnbindGatewayResponse> __Method_UnbindGateway = new grpc::Method<global::Saltoapis.Nebula.Gateway.V1.UnbindGatewayRequest, global::Saltoapis.Nebula.Gateway.V1.UnbindGatewayResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnbindGateway",
        __Marshaller_salto_nebula_gateway_v1_UnbindGatewayRequest,
        __Marshaller_salto_nebula_gateway_v1_UnbindGatewayResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Gateway.V1.InitializeGatewayRequest, global::Saltoapis.Longrunning.V1.Operation> __Method_InitializeGateway = new grpc::Method<global::Saltoapis.Nebula.Gateway.V1.InitializeGatewayRequest, global::Saltoapis.Longrunning.V1.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InitializeGateway",
        __Marshaller_salto_nebula_gateway_v1_InitializeGatewayRequest,
        __Marshaller_salto_longrunning_v1_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Gateway.V1.ConfigureGatewayRequest, global::Saltoapis.Longrunning.V1.Operation> __Method_ConfigureGateway = new grpc::Method<global::Saltoapis.Nebula.Gateway.V1.ConfigureGatewayRequest, global::Saltoapis.Longrunning.V1.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureGateway",
        __Marshaller_salto_nebula_gateway_v1_ConfigureGatewayRequest,
        __Marshaller_salto_longrunning_v1_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Gateway.V1.ResetGatewayRequest, global::Saltoapis.Longrunning.V1.Operation> __Method_ResetGateway = new grpc::Method<global::Saltoapis.Nebula.Gateway.V1.ResetGatewayRequest, global::Saltoapis.Longrunning.V1.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetGateway",
        __Marshaller_salto_nebula_gateway_v1_ResetGatewayRequest,
        __Marshaller_salto_longrunning_v1_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Gateway.V1.UpdateGatewayFirmwareRequest, global::Saltoapis.Longrunning.V1.Operation> __Method_UpdateGatewayFirmware = new grpc::Method<global::Saltoapis.Nebula.Gateway.V1.UpdateGatewayFirmwareRequest, global::Saltoapis.Longrunning.V1.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateGatewayFirmware",
        __Marshaller_salto_nebula_gateway_v1_UpdateGatewayFirmwareRequest,
        __Marshaller_salto_longrunning_v1_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Gateway.V1.GenerateAuthorizationTokenRequest, global::Saltoapis.Nebula.Gateway.V1.GenerateAuthorizationTokenResponse> __Method_GenerateAuthorizationToken = new grpc::Method<global::Saltoapis.Nebula.Gateway.V1.GenerateAuthorizationTokenRequest, global::Saltoapis.Nebula.Gateway.V1.GenerateAuthorizationTokenResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GenerateAuthorizationToken",
        __Marshaller_salto_nebula_gateway_v1_GenerateAuthorizationTokenRequest,
        __Marshaller_salto_nebula_gateway_v1_GenerateAuthorizationTokenResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Gateway.V1.GenerateFirmwareDownloadUriRequest, global::Saltoapis.Longrunning.V1.Operation> __Method_GenerateFirmwareDownloadUri = new grpc::Method<global::Saltoapis.Nebula.Gateway.V1.GenerateFirmwareDownloadUriRequest, global::Saltoapis.Longrunning.V1.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GenerateFirmwareDownloadUri",
        __Marshaller_salto_nebula_gateway_v1_GenerateFirmwareDownloadUriRequest,
        __Marshaller_salto_longrunning_v1_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Saltoapis.Nebula.Gateway.V1.GatewayReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for GatewayService</summary>
    public partial class GatewayServiceClient : grpc::ClientBase<GatewayServiceClient>
    {
      /// <summary>Creates a new client for GatewayService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public GatewayServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GatewayService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public GatewayServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected GatewayServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected GatewayServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Create a gateway
      ///
      /// Creates a new gateway
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Gateway.V1.Gateway CreateGateway(global::Saltoapis.Nebula.Gateway.V1.CreateGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateGateway(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a gateway
      ///
      /// Creates a new gateway
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Gateway.V1.Gateway CreateGateway(global::Saltoapis.Nebula.Gateway.V1.CreateGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateGateway, null, options, request);
      }
      /// <summary>
      /// Create a gateway
      ///
      /// Creates a new gateway
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Gateway.V1.Gateway> CreateGatewayAsync(global::Saltoapis.Nebula.Gateway.V1.CreateGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateGatewayAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a gateway
      ///
      /// Creates a new gateway
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Gateway.V1.Gateway> CreateGatewayAsync(global::Saltoapis.Nebula.Gateway.V1.CreateGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateGateway, null, options, request);
      }
      /// <summary>
      /// Get a gateway
      ///
      /// Gets an existing gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Gateway.V1.Gateway GetGateway(global::Saltoapis.Nebula.Gateway.V1.GetGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGateway(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a gateway
      ///
      /// Gets an existing gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Gateway.V1.Gateway GetGateway(global::Saltoapis.Nebula.Gateway.V1.GetGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGateway, null, options, request);
      }
      /// <summary>
      /// Get a gateway
      ///
      /// Gets an existing gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Gateway.V1.Gateway> GetGatewayAsync(global::Saltoapis.Nebula.Gateway.V1.GetGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGatewayAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a gateway
      ///
      /// Gets an existing gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Gateway.V1.Gateway> GetGatewayAsync(global::Saltoapis.Nebula.Gateway.V1.GetGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGateway, null, options, request);
      }
      /// <summary>
      /// List gateways
      ///
      /// Returns a list of gateways that have been previously created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Gateway.V1.ListGatewaysResponse ListGateways(global::Saltoapis.Nebula.Gateway.V1.ListGatewaysRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListGateways(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List gateways
      ///
      /// Returns a list of gateways that have been previously created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Gateway.V1.ListGatewaysResponse ListGateways(global::Saltoapis.Nebula.Gateway.V1.ListGatewaysRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListGateways, null, options, request);
      }
      /// <summary>
      /// List gateways
      ///
      /// Returns a list of gateways that have been previously created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Gateway.V1.ListGatewaysResponse> ListGatewaysAsync(global::Saltoapis.Nebula.Gateway.V1.ListGatewaysRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListGatewaysAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List gateways
      ///
      /// Returns a list of gateways that have been previously created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Gateway.V1.ListGatewaysResponse> ListGatewaysAsync(global::Saltoapis.Nebula.Gateway.V1.ListGatewaysRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListGateways, null, options, request);
      }
      /// <summary>
      /// Update a gateway
      ///
      /// Updates an existing gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Gateway.V1.Gateway UpdateGateway(global::Saltoapis.Nebula.Gateway.V1.UpdateGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGateway(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a gateway
      ///
      /// Updates an existing gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Gateway.V1.Gateway UpdateGateway(global::Saltoapis.Nebula.Gateway.V1.UpdateGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateGateway, null, options, request);
      }
      /// <summary>
      /// Update a gateway
      ///
      /// Updates an existing gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Gateway.V1.Gateway> UpdateGatewayAsync(global::Saltoapis.Nebula.Gateway.V1.UpdateGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGatewayAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a gateway
      ///
      /// Updates an existing gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Gateway.V1.Gateway> UpdateGatewayAsync(global::Saltoapis.Nebula.Gateway.V1.UpdateGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateGateway, null, options, request);
      }
      /// <summary>
      /// Delete a gateway
      ///
      /// Permanently deletes a gateway. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteGateway(global::Saltoapis.Nebula.Gateway.V1.DeleteGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteGateway(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a gateway
      ///
      /// Permanently deletes a gateway. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteGateway(global::Saltoapis.Nebula.Gateway.V1.DeleteGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteGateway, null, options, request);
      }
      /// <summary>
      /// Delete a gateway
      ///
      /// Permanently deletes a gateway. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteGatewayAsync(global::Saltoapis.Nebula.Gateway.V1.DeleteGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteGatewayAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a gateway
      ///
      /// Permanently deletes a gateway. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteGatewayAsync(global::Saltoapis.Nebula.Gateway.V1.DeleteGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteGateway, null, options, request);
      }
      /// <summary>
      /// Bind a gateway
      ///
      /// Binds a gateway. Binding a gateway assigns a device
      /// identifier to the gateway. After binding, the device can then be
      /// initialized or configured.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Gateway.V1.BindGatewayResponse BindGateway(global::Saltoapis.Nebula.Gateway.V1.BindGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BindGateway(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bind a gateway
      ///
      /// Binds a gateway. Binding a gateway assigns a device
      /// identifier to the gateway. After binding, the device can then be
      /// initialized or configured.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Gateway.V1.BindGatewayResponse BindGateway(global::Saltoapis.Nebula.Gateway.V1.BindGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BindGateway, null, options, request);
      }
      /// <summary>
      /// Bind a gateway
      ///
      /// Binds a gateway. Binding a gateway assigns a device
      /// identifier to the gateway. After binding, the device can then be
      /// initialized or configured.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Gateway.V1.BindGatewayResponse> BindGatewayAsync(global::Saltoapis.Nebula.Gateway.V1.BindGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BindGatewayAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bind a gateway
      ///
      /// Binds a gateway. Binding a gateway assigns a device
      /// identifier to the gateway. After binding, the device can then be
      /// initialized or configured.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Gateway.V1.BindGatewayResponse> BindGatewayAsync(global::Saltoapis.Nebula.Gateway.V1.BindGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BindGateway, null, options, request);
      }
      /// <summary>
      /// Unbind a gateway
      ///
      /// Unbinds a gateway. Unbinding a gateway removes the
      /// device identifier from the gateway. This may be required in some
      /// cases where the gateway is not available anymore because, for
      /// example, it's broken or damaged. Unbinding allows the initialization of
      /// the replacement device without removing it from the installation. It also
      /// means the device keeps all the information associated with it, such as
      /// events.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Gateway.V1.UnbindGatewayResponse UnbindGateway(global::Saltoapis.Nebula.Gateway.V1.UnbindGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnbindGateway(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unbind a gateway
      ///
      /// Unbinds a gateway. Unbinding a gateway removes the
      /// device identifier from the gateway. This may be required in some
      /// cases where the gateway is not available anymore because, for
      /// example, it's broken or damaged. Unbinding allows the initialization of
      /// the replacement device without removing it from the installation. It also
      /// means the device keeps all the information associated with it, such as
      /// events.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Gateway.V1.UnbindGatewayResponse UnbindGateway(global::Saltoapis.Nebula.Gateway.V1.UnbindGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnbindGateway, null, options, request);
      }
      /// <summary>
      /// Unbind a gateway
      ///
      /// Unbinds a gateway. Unbinding a gateway removes the
      /// device identifier from the gateway. This may be required in some
      /// cases where the gateway is not available anymore because, for
      /// example, it's broken or damaged. Unbinding allows the initialization of
      /// the replacement device without removing it from the installation. It also
      /// means the device keeps all the information associated with it, such as
      /// events.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Gateway.V1.UnbindGatewayResponse> UnbindGatewayAsync(global::Saltoapis.Nebula.Gateway.V1.UnbindGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnbindGatewayAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unbind a gateway
      ///
      /// Unbinds a gateway. Unbinding a gateway removes the
      /// device identifier from the gateway. This may be required in some
      /// cases where the gateway is not available anymore because, for
      /// example, it's broken or damaged. Unbinding allows the initialization of
      /// the replacement device without removing it from the installation. It also
      /// means the device keeps all the information associated with it, such as
      /// events.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Gateway.V1.UnbindGatewayResponse> UnbindGatewayAsync(global::Saltoapis.Nebula.Gateway.V1.UnbindGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnbindGateway, null, options, request);
      }
      /// <summary>
      /// Initialize a gateway
      ///
      /// Initializes a gateway. Gateways need to be initialized before
      /// you can start to use them.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Longrunning.V1.Operation InitializeGateway(global::Saltoapis.Nebula.Gateway.V1.InitializeGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InitializeGateway(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Initialize a gateway
      ///
      /// Initializes a gateway. Gateways need to be initialized before
      /// you can start to use them.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Longrunning.V1.Operation InitializeGateway(global::Saltoapis.Nebula.Gateway.V1.InitializeGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InitializeGateway, null, options, request);
      }
      /// <summary>
      /// Initialize a gateway
      ///
      /// Initializes a gateway. Gateways need to be initialized before
      /// you can start to use them.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Longrunning.V1.Operation> InitializeGatewayAsync(global::Saltoapis.Nebula.Gateway.V1.InitializeGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InitializeGatewayAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Initialize a gateway
      ///
      /// Initializes a gateway. Gateways need to be initialized before
      /// you can start to use them.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Longrunning.V1.Operation> InitializeGatewayAsync(global::Saltoapis.Nebula.Gateway.V1.InitializeGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InitializeGateway, null, options, request);
      }
      /// <summary>
      /// Configure a gateway
      ///
      /// Configures a gateway. Configuring a gateway implies adding some
      /// information to the gateway such as setting the time zone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Longrunning.V1.Operation ConfigureGateway(global::Saltoapis.Nebula.Gateway.V1.ConfigureGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureGateway(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Configure a gateway
      ///
      /// Configures a gateway. Configuring a gateway implies adding some
      /// information to the gateway such as setting the time zone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Longrunning.V1.Operation ConfigureGateway(global::Saltoapis.Nebula.Gateway.V1.ConfigureGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureGateway, null, options, request);
      }
      /// <summary>
      /// Configure a gateway
      ///
      /// Configures a gateway. Configuring a gateway implies adding some
      /// information to the gateway such as setting the time zone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Longrunning.V1.Operation> ConfigureGatewayAsync(global::Saltoapis.Nebula.Gateway.V1.ConfigureGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureGatewayAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Configure a gateway
      ///
      /// Configures a gateway. Configuring a gateway implies adding some
      /// information to the gateway such as setting the time zone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Longrunning.V1.Operation> ConfigureGatewayAsync(global::Saltoapis.Nebula.Gateway.V1.ConfigureGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureGateway, null, options, request);
      }
      /// <summary>
      /// Reset a gateway
      ///
      /// Resetting a device such as a gateway means returning it to its factory
      /// settings. Resetting is the process of removing the identity as
      /// well as all the associated information of an already configured device.
      /// Once a device has been reset, you need to reconfigure it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Longrunning.V1.Operation ResetGateway(global::Saltoapis.Nebula.Gateway.V1.ResetGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetGateway(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Reset a gateway
      ///
      /// Resetting a device such as a gateway means returning it to its factory
      /// settings. Resetting is the process of removing the identity as
      /// well as all the associated information of an already configured device.
      /// Once a device has been reset, you need to reconfigure it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Longrunning.V1.Operation ResetGateway(global::Saltoapis.Nebula.Gateway.V1.ResetGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetGateway, null, options, request);
      }
      /// <summary>
      /// Reset a gateway
      ///
      /// Resetting a device such as a gateway means returning it to its factory
      /// settings. Resetting is the process of removing the identity as
      /// well as all the associated information of an already configured device.
      /// Once a device has been reset, you need to reconfigure it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Longrunning.V1.Operation> ResetGatewayAsync(global::Saltoapis.Nebula.Gateway.V1.ResetGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetGatewayAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Reset a gateway
      ///
      /// Resetting a device such as a gateway means returning it to its factory
      /// settings. Resetting is the process of removing the identity as
      /// well as all the associated information of an already configured device.
      /// Once a device has been reset, you need to reconfigure it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Longrunning.V1.Operation> ResetGatewayAsync(global::Saltoapis.Nebula.Gateway.V1.ResetGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetGateway, null, options, request);
      }
      /// <summary>
      /// Update gateway firmware
      ///
      /// Updates a gateway's firmware. SALTO provides firmware updates when
      /// new functionality is available or when we fix a bug.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Longrunning.V1.Operation UpdateGatewayFirmware(global::Saltoapis.Nebula.Gateway.V1.UpdateGatewayFirmwareRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGatewayFirmware(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update gateway firmware
      ///
      /// Updates a gateway's firmware. SALTO provides firmware updates when
      /// new functionality is available or when we fix a bug.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Longrunning.V1.Operation UpdateGatewayFirmware(global::Saltoapis.Nebula.Gateway.V1.UpdateGatewayFirmwareRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateGatewayFirmware, null, options, request);
      }
      /// <summary>
      /// Update gateway firmware
      ///
      /// Updates a gateway's firmware. SALTO provides firmware updates when
      /// new functionality is available or when we fix a bug.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Longrunning.V1.Operation> UpdateGatewayFirmwareAsync(global::Saltoapis.Nebula.Gateway.V1.UpdateGatewayFirmwareRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGatewayFirmwareAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update gateway firmware
      ///
      /// Updates a gateway's firmware. SALTO provides firmware updates when
      /// new functionality is available or when we fix a bug.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Longrunning.V1.Operation> UpdateGatewayFirmwareAsync(global::Saltoapis.Nebula.Gateway.V1.UpdateGatewayFirmwareRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateGatewayFirmware, null, options, request);
      }
      /// <summary>
      /// Generates an authorization token for a gateway
      ///
      /// Generates an authorization token that allows to connect, authenticate and
      /// authorize against a gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Gateway.V1.GenerateAuthorizationTokenResponse GenerateAuthorizationToken(global::Saltoapis.Nebula.Gateway.V1.GenerateAuthorizationTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateAuthorizationToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generates an authorization token for a gateway
      ///
      /// Generates an authorization token that allows to connect, authenticate and
      /// authorize against a gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Gateway.V1.GenerateAuthorizationTokenResponse GenerateAuthorizationToken(global::Saltoapis.Nebula.Gateway.V1.GenerateAuthorizationTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GenerateAuthorizationToken, null, options, request);
      }
      /// <summary>
      /// Generates an authorization token for a gateway
      ///
      /// Generates an authorization token that allows to connect, authenticate and
      /// authorize against a gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Gateway.V1.GenerateAuthorizationTokenResponse> GenerateAuthorizationTokenAsync(global::Saltoapis.Nebula.Gateway.V1.GenerateAuthorizationTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateAuthorizationTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generates an authorization token for a gateway
      ///
      /// Generates an authorization token that allows to connect, authenticate and
      /// authorize against a gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Gateway.V1.GenerateAuthorizationTokenResponse> GenerateAuthorizationTokenAsync(global::Saltoapis.Nebula.Gateway.V1.GenerateAuthorizationTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GenerateAuthorizationToken, null, options, request);
      }
      /// <summary>
      /// Generate gateway firmware download URI
      ///
      /// Provides the download URI for the latest firmware bundle for the
      /// gateway. The returned URI can be used to bring the gateway
      /// firmwares up to latest.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Longrunning.V1.Operation GenerateFirmwareDownloadUri(global::Saltoapis.Nebula.Gateway.V1.GenerateFirmwareDownloadUriRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateFirmwareDownloadUri(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generate gateway firmware download URI
      ///
      /// Provides the download URI for the latest firmware bundle for the
      /// gateway. The returned URI can be used to bring the gateway
      /// firmwares up to latest.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Longrunning.V1.Operation GenerateFirmwareDownloadUri(global::Saltoapis.Nebula.Gateway.V1.GenerateFirmwareDownloadUriRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GenerateFirmwareDownloadUri, null, options, request);
      }
      /// <summary>
      /// Generate gateway firmware download URI
      ///
      /// Provides the download URI for the latest firmware bundle for the
      /// gateway. The returned URI can be used to bring the gateway
      /// firmwares up to latest.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Longrunning.V1.Operation> GenerateFirmwareDownloadUriAsync(global::Saltoapis.Nebula.Gateway.V1.GenerateFirmwareDownloadUriRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateFirmwareDownloadUriAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generate gateway firmware download URI
      ///
      /// Provides the download URI for the latest firmware bundle for the
      /// gateway. The returned URI can be used to bring the gateway
      /// firmwares up to latest.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Longrunning.V1.Operation> GenerateFirmwareDownloadUriAsync(global::Saltoapis.Nebula.Gateway.V1.GenerateFirmwareDownloadUriRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GenerateFirmwareDownloadUri, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override GatewayServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GatewayServiceClient(configuration);
      }
    }

  }
}
#endregion
