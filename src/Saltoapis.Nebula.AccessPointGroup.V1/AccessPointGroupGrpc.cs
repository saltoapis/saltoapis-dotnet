// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: salto/nebula/accesspointgroup/v1/access_point_group.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Saltoapis.Nebula.AccessPointGroup.V1 {
  /// <summary>
  /// Access point group is a collection of access points that can be managed as a
  /// single entity. It is used to simplify the management of multiple access
  /// points by grouping them together and applying settings to all of them at
  /// once. It's also used to optimize the amount of data being used to store all
  /// access point identifiers by using only an access point group identifier.
  /// </summary>
  public static partial class AccessPointGroupService
  {
    static readonly string __ServiceName = "salto.nebula.accesspointgroup.v1.AccessPointGroupService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.AccessPointGroup.V1.CreateAccessPointGroupRequest> __Marshaller_salto_nebula_accesspointgroup_v1_CreateAccessPointGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.AccessPointGroup.V1.CreateAccessPointGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup> __Marshaller_salto_nebula_accesspointgroup_v1_AccessPointGroup = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.AccessPointGroup.V1.GetAccessPointGroupRequest> __Marshaller_salto_nebula_accesspointgroup_v1_GetAccessPointGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.AccessPointGroup.V1.GetAccessPointGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupsRequest> __Marshaller_salto_nebula_accesspointgroup_v1_ListAccessPointGroupsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupsResponse> __Marshaller_salto_nebula_accesspointgroup_v1_ListAccessPointGroupsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.AccessPointGroup.V1.UpdateAccessPointGroupRequest> __Marshaller_salto_nebula_accesspointgroup_v1_UpdateAccessPointGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.AccessPointGroup.V1.UpdateAccessPointGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.AccessPointGroup.V1.DeleteAccessPointGroupRequest> __Marshaller_salto_nebula_accesspointgroup_v1_DeleteAccessPointGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.AccessPointGroup.V1.DeleteAccessPointGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.AccessPointGroup.V1.CreateAccessPointGroupAccessPointRequest> __Marshaller_salto_nebula_accesspointgroup_v1_CreateAccessPointGroupAccessPointRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.AccessPointGroup.V1.CreateAccessPointGroupAccessPointRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint> __Marshaller_salto_nebula_accesspointgroup_v1_AccessPointGroupAccessPoint = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.AccessPointGroup.V1.GetAccessPointGroupAccessPointRequest> __Marshaller_salto_nebula_accesspointgroup_v1_GetAccessPointGroupAccessPointRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.AccessPointGroup.V1.GetAccessPointGroupAccessPointRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupAccessPointsRequest> __Marshaller_salto_nebula_accesspointgroup_v1_ListAccessPointGroupAccessPointsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupAccessPointsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupAccessPointsResponse> __Marshaller_salto_nebula_accesspointgroup_v1_ListAccessPointGroupAccessPointsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupAccessPointsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.AccessPointGroup.V1.UpdateAccessPointGroupAccessPointRequest> __Marshaller_salto_nebula_accesspointgroup_v1_UpdateAccessPointGroupAccessPointRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.AccessPointGroup.V1.UpdateAccessPointGroupAccessPointRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.AccessPointGroup.V1.DeleteAccessPointGroupAccessPointRequest> __Marshaller_salto_nebula_accesspointgroup_v1_DeleteAccessPointGroupAccessPointRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.AccessPointGroup.V1.DeleteAccessPointGroupAccessPointRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.CreateAccessPointGroupRequest, global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup> __Method_CreateAccessPointGroup = new grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.CreateAccessPointGroupRequest, global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAccessPointGroup",
        __Marshaller_salto_nebula_accesspointgroup_v1_CreateAccessPointGroupRequest,
        __Marshaller_salto_nebula_accesspointgroup_v1_AccessPointGroup);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.GetAccessPointGroupRequest, global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup> __Method_GetAccessPointGroup = new grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.GetAccessPointGroupRequest, global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAccessPointGroup",
        __Marshaller_salto_nebula_accesspointgroup_v1_GetAccessPointGroupRequest,
        __Marshaller_salto_nebula_accesspointgroup_v1_AccessPointGroup);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupsRequest, global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupsResponse> __Method_ListAccessPointGroups = new grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupsRequest, global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAccessPointGroups",
        __Marshaller_salto_nebula_accesspointgroup_v1_ListAccessPointGroupsRequest,
        __Marshaller_salto_nebula_accesspointgroup_v1_ListAccessPointGroupsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.UpdateAccessPointGroupRequest, global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup> __Method_UpdateAccessPointGroup = new grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.UpdateAccessPointGroupRequest, global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAccessPointGroup",
        __Marshaller_salto_nebula_accesspointgroup_v1_UpdateAccessPointGroupRequest,
        __Marshaller_salto_nebula_accesspointgroup_v1_AccessPointGroup);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.DeleteAccessPointGroupRequest, global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup> __Method_DeleteAccessPointGroup = new grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.DeleteAccessPointGroupRequest, global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAccessPointGroup",
        __Marshaller_salto_nebula_accesspointgroup_v1_DeleteAccessPointGroupRequest,
        __Marshaller_salto_nebula_accesspointgroup_v1_AccessPointGroup);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.CreateAccessPointGroupAccessPointRequest, global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint> __Method_CreateAccessPointGroupAccessPoint = new grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.CreateAccessPointGroupAccessPointRequest, global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAccessPointGroupAccessPoint",
        __Marshaller_salto_nebula_accesspointgroup_v1_CreateAccessPointGroupAccessPointRequest,
        __Marshaller_salto_nebula_accesspointgroup_v1_AccessPointGroupAccessPoint);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.GetAccessPointGroupAccessPointRequest, global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint> __Method_GetAccessPointGroupAccessPoint = new grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.GetAccessPointGroupAccessPointRequest, global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAccessPointGroupAccessPoint",
        __Marshaller_salto_nebula_accesspointgroup_v1_GetAccessPointGroupAccessPointRequest,
        __Marshaller_salto_nebula_accesspointgroup_v1_AccessPointGroupAccessPoint);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupAccessPointsRequest, global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupAccessPointsResponse> __Method_ListAccessPointGroupAccessPoints = new grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupAccessPointsRequest, global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupAccessPointsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAccessPointGroupAccessPoints",
        __Marshaller_salto_nebula_accesspointgroup_v1_ListAccessPointGroupAccessPointsRequest,
        __Marshaller_salto_nebula_accesspointgroup_v1_ListAccessPointGroupAccessPointsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.UpdateAccessPointGroupAccessPointRequest, global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint> __Method_UpdateAccessPointGroupAccessPoint = new grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.UpdateAccessPointGroupAccessPointRequest, global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAccessPointGroupAccessPoint",
        __Marshaller_salto_nebula_accesspointgroup_v1_UpdateAccessPointGroupAccessPointRequest,
        __Marshaller_salto_nebula_accesspointgroup_v1_AccessPointGroupAccessPoint);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.DeleteAccessPointGroupAccessPointRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteAccessPointGroupAccessPoint = new grpc::Method<global::Saltoapis.Nebula.AccessPointGroup.V1.DeleteAccessPointGroupAccessPointRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAccessPointGroupAccessPoint",
        __Marshaller_salto_nebula_accesspointgroup_v1_DeleteAccessPointGroupAccessPointRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for AccessPointGroupService</summary>
    public partial class AccessPointGroupServiceClient : grpc::ClientBase<AccessPointGroupServiceClient>
    {
      /// <summary>Creates a new client for AccessPointGroupService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AccessPointGroupServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AccessPointGroupService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AccessPointGroupServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AccessPointGroupServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AccessPointGroupServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Create an access point group
      ///
      /// Creates an access point group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup CreateAccessPointGroup(global::Saltoapis.Nebula.AccessPointGroup.V1.CreateAccessPointGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAccessPointGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an access point group
      ///
      /// Creates an access point group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup CreateAccessPointGroup(global::Saltoapis.Nebula.AccessPointGroup.V1.CreateAccessPointGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAccessPointGroup, null, options, request);
      }
      /// <summary>
      /// Create an access point group
      ///
      /// Creates an access point group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup> CreateAccessPointGroupAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.CreateAccessPointGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAccessPointGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an access point group
      ///
      /// Creates an access point group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup> CreateAccessPointGroupAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.CreateAccessPointGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAccessPointGroup, null, options, request);
      }
      /// <summary>
      /// Get an access point group
      ///
      /// Gets an existing access point group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup GetAccessPointGroup(global::Saltoapis.Nebula.AccessPointGroup.V1.GetAccessPointGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccessPointGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get an access point group
      ///
      /// Gets an existing access point group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup GetAccessPointGroup(global::Saltoapis.Nebula.AccessPointGroup.V1.GetAccessPointGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAccessPointGroup, null, options, request);
      }
      /// <summary>
      /// Get an access point group
      ///
      /// Gets an existing access point group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup> GetAccessPointGroupAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.GetAccessPointGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccessPointGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get an access point group
      ///
      /// Gets an existing access point group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup> GetAccessPointGroupAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.GetAccessPointGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAccessPointGroup, null, options, request);
      }
      /// <summary>
      /// List access point groups
      ///
      /// Returns a list of access point groups that have been previously
      /// created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupsResponse ListAccessPointGroups(global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccessPointGroups(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List access point groups
      ///
      /// Returns a list of access point groups that have been previously
      /// created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupsResponse ListAccessPointGroups(global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAccessPointGroups, null, options, request);
      }
      /// <summary>
      /// List access point groups
      ///
      /// Returns a list of access point groups that have been previously
      /// created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupsResponse> ListAccessPointGroupsAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccessPointGroupsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List access point groups
      ///
      /// Returns a list of access point groups that have been previously
      /// created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupsResponse> ListAccessPointGroupsAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAccessPointGroups, null, options, request);
      }
      /// <summary>
      /// Update an access point group
      ///
      /// Updates an existing access point group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup UpdateAccessPointGroup(global::Saltoapis.Nebula.AccessPointGroup.V1.UpdateAccessPointGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAccessPointGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an access point group
      ///
      /// Updates an existing access point group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup UpdateAccessPointGroup(global::Saltoapis.Nebula.AccessPointGroup.V1.UpdateAccessPointGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAccessPointGroup, null, options, request);
      }
      /// <summary>
      /// Update an access point group
      ///
      /// Updates an existing access point group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup> UpdateAccessPointGroupAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.UpdateAccessPointGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAccessPointGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an access point group
      ///
      /// Updates an existing access point group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup> UpdateAccessPointGroupAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.UpdateAccessPointGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAccessPointGroup, null, options, request);
      }
      /// <summary>
      /// Delete an access point group
      ///
      /// Soft deletes an access point group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup DeleteAccessPointGroup(global::Saltoapis.Nebula.AccessPointGroup.V1.DeleteAccessPointGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAccessPointGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an access point group
      ///
      /// Soft deletes an access point group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup DeleteAccessPointGroup(global::Saltoapis.Nebula.AccessPointGroup.V1.DeleteAccessPointGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAccessPointGroup, null, options, request);
      }
      /// <summary>
      /// Delete an access point group
      ///
      /// Soft deletes an access point group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup> DeleteAccessPointGroupAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.DeleteAccessPointGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAccessPointGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an access point group
      ///
      /// Soft deletes an access point group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroup> DeleteAccessPointGroupAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.DeleteAccessPointGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAccessPointGroup, null, options, request);
      }
      /// <summary>
      /// Create an access point
      ///
      /// Creates an access point group's access point association.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint CreateAccessPointGroupAccessPoint(global::Saltoapis.Nebula.AccessPointGroup.V1.CreateAccessPointGroupAccessPointRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAccessPointGroupAccessPoint(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an access point
      ///
      /// Creates an access point group's access point association.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint CreateAccessPointGroupAccessPoint(global::Saltoapis.Nebula.AccessPointGroup.V1.CreateAccessPointGroupAccessPointRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAccessPointGroupAccessPoint, null, options, request);
      }
      /// <summary>
      /// Create an access point
      ///
      /// Creates an access point group's access point association.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint> CreateAccessPointGroupAccessPointAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.CreateAccessPointGroupAccessPointRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAccessPointGroupAccessPointAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an access point
      ///
      /// Creates an access point group's access point association.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint> CreateAccessPointGroupAccessPointAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.CreateAccessPointGroupAccessPointRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAccessPointGroupAccessPoint, null, options, request);
      }
      /// <summary>
      /// Get an access point
      ///
      /// Retrieves an existing access point group's access point association.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint GetAccessPointGroupAccessPoint(global::Saltoapis.Nebula.AccessPointGroup.V1.GetAccessPointGroupAccessPointRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccessPointGroupAccessPoint(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get an access point
      ///
      /// Retrieves an existing access point group's access point association.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint GetAccessPointGroupAccessPoint(global::Saltoapis.Nebula.AccessPointGroup.V1.GetAccessPointGroupAccessPointRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAccessPointGroupAccessPoint, null, options, request);
      }
      /// <summary>
      /// Get an access point
      ///
      /// Retrieves an existing access point group's access point association.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint> GetAccessPointGroupAccessPointAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.GetAccessPointGroupAccessPointRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccessPointGroupAccessPointAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get an access point
      ///
      /// Retrieves an existing access point group's access point association.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint> GetAccessPointGroupAccessPointAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.GetAccessPointGroupAccessPointRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAccessPointGroupAccessPoint, null, options, request);
      }
      /// <summary>
      /// List access points
      ///
      /// Lists an existing access point group's access point associations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupAccessPointsResponse ListAccessPointGroupAccessPoints(global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupAccessPointsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccessPointGroupAccessPoints(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List access points
      ///
      /// Lists an existing access point group's access point associations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupAccessPointsResponse ListAccessPointGroupAccessPoints(global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupAccessPointsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAccessPointGroupAccessPoints, null, options, request);
      }
      /// <summary>
      /// List access points
      ///
      /// Lists an existing access point group's access point associations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupAccessPointsResponse> ListAccessPointGroupAccessPointsAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupAccessPointsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccessPointGroupAccessPointsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List access points
      ///
      /// Lists an existing access point group's access point associations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupAccessPointsResponse> ListAccessPointGroupAccessPointsAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.ListAccessPointGroupAccessPointsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAccessPointGroupAccessPoints, null, options, request);
      }
      /// <summary>
      /// Update an access point
      ///
      /// Updates an existing access point group's access point association.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint UpdateAccessPointGroupAccessPoint(global::Saltoapis.Nebula.AccessPointGroup.V1.UpdateAccessPointGroupAccessPointRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAccessPointGroupAccessPoint(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an access point
      ///
      /// Updates an existing access point group's access point association.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint UpdateAccessPointGroupAccessPoint(global::Saltoapis.Nebula.AccessPointGroup.V1.UpdateAccessPointGroupAccessPointRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAccessPointGroupAccessPoint, null, options, request);
      }
      /// <summary>
      /// Update an access point
      ///
      /// Updates an existing access point group's access point association.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint> UpdateAccessPointGroupAccessPointAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.UpdateAccessPointGroupAccessPointRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAccessPointGroupAccessPointAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an access point
      ///
      /// Updates an existing access point group's access point association.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.AccessPointGroup.V1.AccessPointGroupAccessPoint> UpdateAccessPointGroupAccessPointAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.UpdateAccessPointGroupAccessPointRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAccessPointGroupAccessPoint, null, options, request);
      }
      /// <summary>
      /// Delete an access point
      ///
      /// Deletes an access point group's access point association.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAccessPointGroupAccessPoint(global::Saltoapis.Nebula.AccessPointGroup.V1.DeleteAccessPointGroupAccessPointRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAccessPointGroupAccessPoint(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an access point
      ///
      /// Deletes an access point group's access point association.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAccessPointGroupAccessPoint(global::Saltoapis.Nebula.AccessPointGroup.V1.DeleteAccessPointGroupAccessPointRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAccessPointGroupAccessPoint, null, options, request);
      }
      /// <summary>
      /// Delete an access point
      ///
      /// Deletes an access point group's access point association.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAccessPointGroupAccessPointAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.DeleteAccessPointGroupAccessPointRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAccessPointGroupAccessPointAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an access point
      ///
      /// Deletes an access point group's access point association.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAccessPointGroupAccessPointAsync(global::Saltoapis.Nebula.AccessPointGroup.V1.DeleteAccessPointGroupAccessPointRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAccessPointGroupAccessPoint, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override AccessPointGroupServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AccessPointGroupServiceClient(configuration);
      }
    }

  }
}
#endregion
