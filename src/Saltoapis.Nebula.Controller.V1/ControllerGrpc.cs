// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: salto/nebula/controller/v1/controller.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Saltoapis.Nebula.Controller.V1 {
  /// <summary>
  /// Controllers are mains-wired hardware devices that can be used to control access where
  /// a standalone lock cannot be fitted. For example, on car park barriers, turnstiles or
  /// sliding doors. They allow the management of multiple accesses from a single device.
  /// For example, one single controller could control access to both the entrance and exit
  /// of a building via a turnstile. This service is responsible for managing controllers
  /// resources.
  /// </summary>
  public static partial class ControllerService
  {
    static readonly string __ServiceName = "salto.nebula.controller.v1.ControllerService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Controller.V1.CreateControllerRequest> __Marshaller_salto_nebula_controller_v1_CreateControllerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Controller.V1.CreateControllerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Controller.V1.Controller> __Marshaller_salto_nebula_controller_v1_Controller = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Controller.V1.Controller.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Controller.V1.GetControllerRequest> __Marshaller_salto_nebula_controller_v1_GetControllerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Controller.V1.GetControllerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Controller.V1.ListControllersRequest> __Marshaller_salto_nebula_controller_v1_ListControllersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Controller.V1.ListControllersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Controller.V1.ListControllersResponse> __Marshaller_salto_nebula_controller_v1_ListControllersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Controller.V1.ListControllersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Controller.V1.UpdateControllerRequest> __Marshaller_salto_nebula_controller_v1_UpdateControllerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Controller.V1.UpdateControllerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Controller.V1.DeleteControllerRequest> __Marshaller_salto_nebula_controller_v1_DeleteControllerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Controller.V1.DeleteControllerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Controller.V1.BindControllerRequest> __Marshaller_salto_nebula_controller_v1_BindControllerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Controller.V1.BindControllerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Controller.V1.BindControllerResponse> __Marshaller_salto_nebula_controller_v1_BindControllerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Controller.V1.BindControllerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Controller.V1.UnbindControllerRequest> __Marshaller_salto_nebula_controller_v1_UnbindControllerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Controller.V1.UnbindControllerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Controller.V1.UnbindControllerResponse> __Marshaller_salto_nebula_controller_v1_UnbindControllerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Controller.V1.UnbindControllerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Controller.V1.InitializeControllerRequest> __Marshaller_salto_nebula_controller_v1_InitializeControllerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Controller.V1.InitializeControllerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Longrunning.V1.Operation> __Marshaller_salto_longrunning_v1_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Longrunning.V1.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Controller.V1.ConfigureControllerRequest> __Marshaller_salto_nebula_controller_v1_ConfigureControllerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Controller.V1.ConfigureControllerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Controller.V1.ResetControllerRequest> __Marshaller_salto_nebula_controller_v1_ResetControllerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Controller.V1.ResetControllerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Saltoapis.Nebula.Controller.V1.UpdateControllerFirmwareRequest> __Marshaller_salto_nebula_controller_v1_UpdateControllerFirmwareRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saltoapis.Nebula.Controller.V1.UpdateControllerFirmwareRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Controller.V1.CreateControllerRequest, global::Saltoapis.Nebula.Controller.V1.Controller> __Method_CreateController = new grpc::Method<global::Saltoapis.Nebula.Controller.V1.CreateControllerRequest, global::Saltoapis.Nebula.Controller.V1.Controller>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateController",
        __Marshaller_salto_nebula_controller_v1_CreateControllerRequest,
        __Marshaller_salto_nebula_controller_v1_Controller);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Controller.V1.GetControllerRequest, global::Saltoapis.Nebula.Controller.V1.Controller> __Method_GetController = new grpc::Method<global::Saltoapis.Nebula.Controller.V1.GetControllerRequest, global::Saltoapis.Nebula.Controller.V1.Controller>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetController",
        __Marshaller_salto_nebula_controller_v1_GetControllerRequest,
        __Marshaller_salto_nebula_controller_v1_Controller);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Controller.V1.ListControllersRequest, global::Saltoapis.Nebula.Controller.V1.ListControllersResponse> __Method_ListControllers = new grpc::Method<global::Saltoapis.Nebula.Controller.V1.ListControllersRequest, global::Saltoapis.Nebula.Controller.V1.ListControllersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListControllers",
        __Marshaller_salto_nebula_controller_v1_ListControllersRequest,
        __Marshaller_salto_nebula_controller_v1_ListControllersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Controller.V1.UpdateControllerRequest, global::Saltoapis.Nebula.Controller.V1.Controller> __Method_UpdateController = new grpc::Method<global::Saltoapis.Nebula.Controller.V1.UpdateControllerRequest, global::Saltoapis.Nebula.Controller.V1.Controller>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateController",
        __Marshaller_salto_nebula_controller_v1_UpdateControllerRequest,
        __Marshaller_salto_nebula_controller_v1_Controller);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Controller.V1.DeleteControllerRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteController = new grpc::Method<global::Saltoapis.Nebula.Controller.V1.DeleteControllerRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteController",
        __Marshaller_salto_nebula_controller_v1_DeleteControllerRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Controller.V1.BindControllerRequest, global::Saltoapis.Nebula.Controller.V1.BindControllerResponse> __Method_BindController = new grpc::Method<global::Saltoapis.Nebula.Controller.V1.BindControllerRequest, global::Saltoapis.Nebula.Controller.V1.BindControllerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BindController",
        __Marshaller_salto_nebula_controller_v1_BindControllerRequest,
        __Marshaller_salto_nebula_controller_v1_BindControllerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Controller.V1.UnbindControllerRequest, global::Saltoapis.Nebula.Controller.V1.UnbindControllerResponse> __Method_UnbindController = new grpc::Method<global::Saltoapis.Nebula.Controller.V1.UnbindControllerRequest, global::Saltoapis.Nebula.Controller.V1.UnbindControllerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnbindController",
        __Marshaller_salto_nebula_controller_v1_UnbindControllerRequest,
        __Marshaller_salto_nebula_controller_v1_UnbindControllerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Controller.V1.InitializeControllerRequest, global::Saltoapis.Longrunning.V1.Operation> __Method_InitializeController = new grpc::Method<global::Saltoapis.Nebula.Controller.V1.InitializeControllerRequest, global::Saltoapis.Longrunning.V1.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InitializeController",
        __Marshaller_salto_nebula_controller_v1_InitializeControllerRequest,
        __Marshaller_salto_longrunning_v1_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Controller.V1.ConfigureControllerRequest, global::Saltoapis.Longrunning.V1.Operation> __Method_ConfigureController = new grpc::Method<global::Saltoapis.Nebula.Controller.V1.ConfigureControllerRequest, global::Saltoapis.Longrunning.V1.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureController",
        __Marshaller_salto_nebula_controller_v1_ConfigureControllerRequest,
        __Marshaller_salto_longrunning_v1_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Controller.V1.ResetControllerRequest, global::Saltoapis.Longrunning.V1.Operation> __Method_ResetController = new grpc::Method<global::Saltoapis.Nebula.Controller.V1.ResetControllerRequest, global::Saltoapis.Longrunning.V1.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetController",
        __Marshaller_salto_nebula_controller_v1_ResetControllerRequest,
        __Marshaller_salto_longrunning_v1_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Saltoapis.Nebula.Controller.V1.UpdateControllerFirmwareRequest, global::Saltoapis.Longrunning.V1.Operation> __Method_UpdateControllerFirmware = new grpc::Method<global::Saltoapis.Nebula.Controller.V1.UpdateControllerFirmwareRequest, global::Saltoapis.Longrunning.V1.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateControllerFirmware",
        __Marshaller_salto_nebula_controller_v1_UpdateControllerFirmwareRequest,
        __Marshaller_salto_longrunning_v1_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Saltoapis.Nebula.Controller.V1.ControllerReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for ControllerService</summary>
    public partial class ControllerServiceClient : grpc::ClientBase<ControllerServiceClient>
    {
      /// <summary>Creates a new client for ControllerService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ControllerServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ControllerService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ControllerServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ControllerServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ControllerServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a controller
      ///
      /// Creates a new controller
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Controller.V1.Controller CreateController(global::Saltoapis.Nebula.Controller.V1.CreateControllerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateController(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a controller
      ///
      /// Creates a new controller
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Controller.V1.Controller CreateController(global::Saltoapis.Nebula.Controller.V1.CreateControllerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateController, null, options, request);
      }
      /// <summary>
      /// Creates a controller
      ///
      /// Creates a new controller
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Controller.V1.Controller> CreateControllerAsync(global::Saltoapis.Nebula.Controller.V1.CreateControllerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateControllerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a controller
      ///
      /// Creates a new controller
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Controller.V1.Controller> CreateControllerAsync(global::Saltoapis.Nebula.Controller.V1.CreateControllerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateController, null, options, request);
      }
      /// <summary>
      /// Get a controller
      ///
      /// Gets an existing controller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Controller.V1.Controller GetController(global::Saltoapis.Nebula.Controller.V1.GetControllerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetController(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a controller
      ///
      /// Gets an existing controller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Controller.V1.Controller GetController(global::Saltoapis.Nebula.Controller.V1.GetControllerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetController, null, options, request);
      }
      /// <summary>
      /// Get a controller
      ///
      /// Gets an existing controller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Controller.V1.Controller> GetControllerAsync(global::Saltoapis.Nebula.Controller.V1.GetControllerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetControllerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a controller
      ///
      /// Gets an existing controller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Controller.V1.Controller> GetControllerAsync(global::Saltoapis.Nebula.Controller.V1.GetControllerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetController, null, options, request);
      }
      /// <summary>
      /// List controllers
      ///
      /// Returns a list of controllers that have been previously created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Controller.V1.ListControllersResponse ListControllers(global::Saltoapis.Nebula.Controller.V1.ListControllersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListControllers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List controllers
      ///
      /// Returns a list of controllers that have been previously created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Controller.V1.ListControllersResponse ListControllers(global::Saltoapis.Nebula.Controller.V1.ListControllersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListControllers, null, options, request);
      }
      /// <summary>
      /// List controllers
      ///
      /// Returns a list of controllers that have been previously created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Controller.V1.ListControllersResponse> ListControllersAsync(global::Saltoapis.Nebula.Controller.V1.ListControllersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListControllersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List controllers
      ///
      /// Returns a list of controllers that have been previously created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Controller.V1.ListControllersResponse> ListControllersAsync(global::Saltoapis.Nebula.Controller.V1.ListControllersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListControllers, null, options, request);
      }
      /// <summary>
      /// Update a controller
      ///
      /// Updates an existing controller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Controller.V1.Controller UpdateController(global::Saltoapis.Nebula.Controller.V1.UpdateControllerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateController(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a controller
      ///
      /// Updates an existing controller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Controller.V1.Controller UpdateController(global::Saltoapis.Nebula.Controller.V1.UpdateControllerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateController, null, options, request);
      }
      /// <summary>
      /// Update a controller
      ///
      /// Updates an existing controller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Controller.V1.Controller> UpdateControllerAsync(global::Saltoapis.Nebula.Controller.V1.UpdateControllerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateControllerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a controller
      ///
      /// Updates an existing controller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Controller.V1.Controller> UpdateControllerAsync(global::Saltoapis.Nebula.Controller.V1.UpdateControllerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateController, null, options, request);
      }
      /// <summary>
      /// Delete a controller
      ///
      /// Permanently deletes a controller. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteController(global::Saltoapis.Nebula.Controller.V1.DeleteControllerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteController(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a controller
      ///
      /// Permanently deletes a controller. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteController(global::Saltoapis.Nebula.Controller.V1.DeleteControllerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteController, null, options, request);
      }
      /// <summary>
      /// Delete a controller
      ///
      /// Permanently deletes a controller. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteControllerAsync(global::Saltoapis.Nebula.Controller.V1.DeleteControllerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteControllerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a controller
      ///
      /// Permanently deletes a controller. This cannot be undone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteControllerAsync(global::Saltoapis.Nebula.Controller.V1.DeleteControllerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteController, null, options, request);
      }
      /// <summary>
      /// Bind a controller
      ///
      /// Binds a controller. Binding a controller assigns a device
      /// identifier to the controller. After binding, the device can then be
      /// initialized or configured.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Controller.V1.BindControllerResponse BindController(global::Saltoapis.Nebula.Controller.V1.BindControllerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BindController(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bind a controller
      ///
      /// Binds a controller. Binding a controller assigns a device
      /// identifier to the controller. After binding, the device can then be
      /// initialized or configured.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Controller.V1.BindControllerResponse BindController(global::Saltoapis.Nebula.Controller.V1.BindControllerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BindController, null, options, request);
      }
      /// <summary>
      /// Bind a controller
      ///
      /// Binds a controller. Binding a controller assigns a device
      /// identifier to the controller. After binding, the device can then be
      /// initialized or configured.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Controller.V1.BindControllerResponse> BindControllerAsync(global::Saltoapis.Nebula.Controller.V1.BindControllerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BindControllerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bind a controller
      ///
      /// Binds a controller. Binding a controller assigns a device
      /// identifier to the controller. After binding, the device can then be
      /// initialized or configured.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Controller.V1.BindControllerResponse> BindControllerAsync(global::Saltoapis.Nebula.Controller.V1.BindControllerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BindController, null, options, request);
      }
      /// <summary>
      /// Unbind a controller
      ///
      /// Unbinds a controller. Unbinding a controller removes the
      /// device identifier from the controller. This may be required in some
      /// cases where the controller is not available anymore because, for
      /// example, it's broken or damaged. Unbinding allows the initialization of
      /// the replacement device without removing it from the installation. It also
      /// means the device keeps all the information associated with it, such as
      /// events.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Controller.V1.UnbindControllerResponse UnbindController(global::Saltoapis.Nebula.Controller.V1.UnbindControllerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnbindController(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unbind a controller
      ///
      /// Unbinds a controller. Unbinding a controller removes the
      /// device identifier from the controller. This may be required in some
      /// cases where the controller is not available anymore because, for
      /// example, it's broken or damaged. Unbinding allows the initialization of
      /// the replacement device without removing it from the installation. It also
      /// means the device keeps all the information associated with it, such as
      /// events.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Nebula.Controller.V1.UnbindControllerResponse UnbindController(global::Saltoapis.Nebula.Controller.V1.UnbindControllerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnbindController, null, options, request);
      }
      /// <summary>
      /// Unbind a controller
      ///
      /// Unbinds a controller. Unbinding a controller removes the
      /// device identifier from the controller. This may be required in some
      /// cases where the controller is not available anymore because, for
      /// example, it's broken or damaged. Unbinding allows the initialization of
      /// the replacement device without removing it from the installation. It also
      /// means the device keeps all the information associated with it, such as
      /// events.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Controller.V1.UnbindControllerResponse> UnbindControllerAsync(global::Saltoapis.Nebula.Controller.V1.UnbindControllerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnbindControllerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unbind a controller
      ///
      /// Unbinds a controller. Unbinding a controller removes the
      /// device identifier from the controller. This may be required in some
      /// cases where the controller is not available anymore because, for
      /// example, it's broken or damaged. Unbinding allows the initialization of
      /// the replacement device without removing it from the installation. It also
      /// means the device keeps all the information associated with it, such as
      /// events.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Nebula.Controller.V1.UnbindControllerResponse> UnbindControllerAsync(global::Saltoapis.Nebula.Controller.V1.UnbindControllerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnbindController, null, options, request);
      }
      /// <summary>
      /// Initialize a controller
      ///
      /// Initializes a controller. Controllers need to be initialized
      /// before you can start to use them.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Longrunning.V1.Operation InitializeController(global::Saltoapis.Nebula.Controller.V1.InitializeControllerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InitializeController(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Initialize a controller
      ///
      /// Initializes a controller. Controllers need to be initialized
      /// before you can start to use them.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Longrunning.V1.Operation InitializeController(global::Saltoapis.Nebula.Controller.V1.InitializeControllerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InitializeController, null, options, request);
      }
      /// <summary>
      /// Initialize a controller
      ///
      /// Initializes a controller. Controllers need to be initialized
      /// before you can start to use them.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Longrunning.V1.Operation> InitializeControllerAsync(global::Saltoapis.Nebula.Controller.V1.InitializeControllerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InitializeControllerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Initialize a controller
      ///
      /// Initializes a controller. Controllers need to be initialized
      /// before you can start to use them.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Longrunning.V1.Operation> InitializeControllerAsync(global::Saltoapis.Nebula.Controller.V1.InitializeControllerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InitializeController, null, options, request);
      }
      /// <summary>
      /// Configure a controller
      ///
      /// Configures a controller. Configuring a controller implies
      /// adding some information to the controller such as setting the time
      /// zone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Longrunning.V1.Operation ConfigureController(global::Saltoapis.Nebula.Controller.V1.ConfigureControllerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureController(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Configure a controller
      ///
      /// Configures a controller. Configuring a controller implies
      /// adding some information to the controller such as setting the time
      /// zone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Longrunning.V1.Operation ConfigureController(global::Saltoapis.Nebula.Controller.V1.ConfigureControllerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureController, null, options, request);
      }
      /// <summary>
      /// Configure a controller
      ///
      /// Configures a controller. Configuring a controller implies
      /// adding some information to the controller such as setting the time
      /// zone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Longrunning.V1.Operation> ConfigureControllerAsync(global::Saltoapis.Nebula.Controller.V1.ConfigureControllerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureControllerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Configure a controller
      ///
      /// Configures a controller. Configuring a controller implies
      /// adding some information to the controller such as setting the time
      /// zone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Longrunning.V1.Operation> ConfigureControllerAsync(global::Saltoapis.Nebula.Controller.V1.ConfigureControllerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureController, null, options, request);
      }
      /// <summary>
      /// Reset a controller
      ///
      /// Resetting a device such as a controller means returning it to its
      /// factory settings. Resetting is the process of removing the identity as
      /// well as all the associated information of an already configured device.
      /// Once a device has been reset, you need to reconfigure it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Longrunning.V1.Operation ResetController(global::Saltoapis.Nebula.Controller.V1.ResetControllerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetController(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Reset a controller
      ///
      /// Resetting a device such as a controller means returning it to its
      /// factory settings. Resetting is the process of removing the identity as
      /// well as all the associated information of an already configured device.
      /// Once a device has been reset, you need to reconfigure it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Longrunning.V1.Operation ResetController(global::Saltoapis.Nebula.Controller.V1.ResetControllerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetController, null, options, request);
      }
      /// <summary>
      /// Reset a controller
      ///
      /// Resetting a device such as a controller means returning it to its
      /// factory settings. Resetting is the process of removing the identity as
      /// well as all the associated information of an already configured device.
      /// Once a device has been reset, you need to reconfigure it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Longrunning.V1.Operation> ResetControllerAsync(global::Saltoapis.Nebula.Controller.V1.ResetControllerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetControllerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Reset a controller
      ///
      /// Resetting a device such as a controller means returning it to its
      /// factory settings. Resetting is the process of removing the identity as
      /// well as all the associated information of an already configured device.
      /// Once a device has been reset, you need to reconfigure it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Longrunning.V1.Operation> ResetControllerAsync(global::Saltoapis.Nebula.Controller.V1.ResetControllerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetController, null, options, request);
      }
      /// <summary>
      /// Update controller firmware
      ///
      /// Updates a controller's firmware. SALTO provides firmware updates
      /// when new functionality is available or when we fix a bug.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Longrunning.V1.Operation UpdateControllerFirmware(global::Saltoapis.Nebula.Controller.V1.UpdateControllerFirmwareRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateControllerFirmware(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update controller firmware
      ///
      /// Updates a controller's firmware. SALTO provides firmware updates
      /// when new functionality is available or when we fix a bug.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Saltoapis.Longrunning.V1.Operation UpdateControllerFirmware(global::Saltoapis.Nebula.Controller.V1.UpdateControllerFirmwareRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateControllerFirmware, null, options, request);
      }
      /// <summary>
      /// Update controller firmware
      ///
      /// Updates a controller's firmware. SALTO provides firmware updates
      /// when new functionality is available or when we fix a bug.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Longrunning.V1.Operation> UpdateControllerFirmwareAsync(global::Saltoapis.Nebula.Controller.V1.UpdateControllerFirmwareRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateControllerFirmwareAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update controller firmware
      ///
      /// Updates a controller's firmware. SALTO provides firmware updates
      /// when new functionality is available or when we fix a bug.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Saltoapis.Longrunning.V1.Operation> UpdateControllerFirmwareAsync(global::Saltoapis.Nebula.Controller.V1.UpdateControllerFirmwareRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateControllerFirmware, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ControllerServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ControllerServiceClient(configuration);
      }
    }

  }
}
#endregion
